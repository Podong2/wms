<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.wisestone.wms.domain.Task">

    <resultMap id="taskCountResultMap" type="kr.wisestone.wms.web.rest.dto.TaskStatisticsDTO">
        <result property="totalCount" column="totalCount"/>
        <result property="assignedCount" column="assignedCount"/>
        <result property="createdCount" column="createdCount"/>
        <result property="watchedCount" column="watchedCount"/>
    </resultMap>

    <resultMap id="taskResultMap" type="kr.wisestone.wms.web.rest.dto.TaskDTO">
        <id property="id" column="id" />
        <result property="name" column="name"/>
        <result property="statusId" column="statusId"/>
        <result property="statusName" column="statusName"/>
        <result property="startDate" column="startDate"/>
        <result property="endDate" column="endDate"/>
        <result property="attachedFileExistYn" column="attachedFileExistYn"/>
        <result property="templateYn" column="templateYn"/>
        <result property="importantYn" column="importantYn"/>
        <result property="subTaskCount" column="subTaskCount"/>
        <result property="relatedTaskCount" column="relatedTaskCount"/>
        <association property="taskRepeatSchedule" javaType="kr.wisestone.wms.web.rest.dto.TaskRepeatScheduleDTO">
            <result property="repeatType" column="repeatType"/>
        </association>
        <collection property="assignees" javaType="java.util.ArrayList" resultMap="assigneeUserResultMap"/>
    </resultMap>

    <resultMap id="subTaskResultMap" type="kr.wisestone.wms.web.rest.dto.TaskDTO">
        <id property="id" column="subTaskId" />
        <result property="name" column="subTaskName"/>
        <result property="statusId" column="subTaskStatusId"/>
        <result property="statusName" column="subTaskStatusName"/>
    </resultMap>

    <resultMap id="relatedTaskResultMap" type="kr.wisestone.wms.web.rest.dto.TaskDTO">
        <id property="id" column="relatedTaskId" />
        <result property="name" column="relatedTaskName"/>
        <result property="statusId" column="relatedTaskStatusId"/>
        <result property="statusName" column="relatedTaskStatusName"/>
    </resultMap>

    <resultMap id="assigneeUserResultMap" type="kr.wisestone.wms.web.rest.dto.UserDTO">
        <id property="id" column="assigneeId" />
        <result property="name" column="assigneeName"/>
        <result property="profileImageId" column="assigneeProfileImageId"/>
    </resultMap>

    <resultMap id="projectResultMap" type="kr.wisestone.wms.web.rest.dto.ProjectDTO">
        <id property="id" column="projectId" />
        <result property="name" column="projectName"/>
        <result property="folderYn" column="projectFolderYn"/>
    </resultMap>

    <sql id="taskListFilterTypeQuery">
        <choose>
            <when test="filterType == 'ASSIGNED'">
                AND it.id IN (SELECT itu.task_id
                FROM owl_task_user itu
                LEFT JOIN owl_user iu ON itu.user_id = iu.id
                WHERE itu.user_type = 'ASSIGNEE'
                AND iu.login = #{userId})
            </when>
            <when test="filterType == 'REQUESTED'">
                AND NOT it.id IN (SELECT itu.task_id
                FROM owl_task_user itu
                LEFT JOIN owl_user iu ON itu.user_id = iu.id
                WHERE itu.user_type = 'ASSIGNEE'
                AND iu.login = #{userId})
                AND it.created_by = #{userId}
            </when>
            <when test="filterType == 'WATCHED'">
                AND NOT it.id IN (SELECT itu.task_id
                FROM owl_task_user itu
                LEFT JOIN owl_user iu ON itu.user_id = iu.id
                WHERE itu.user_type = 'ASSIGNEE'
                AND iu.login = #{userId})
                AND it.created_by != #{userId}
                AND it.id IN (SELECT itu.task_id
                FROM owl_task_user itu
                LEFT JOIN owl_user iu ON itu.user_id = iu.id
                WHERE itu.user_type = 'WATCHER'
                AND iu.login = #{userId})
            </when>
        </choose>
    </sql>

    <select id="getTasks" resultType="java.util.ArrayList" resultMap="taskResultMap" parameterType="java.util.HashMap">
        SELECT t.id as id, t.name as name, t.start_date as startDate, t.end_date as endDate, tc.id as statusId, tc.name as statusName
            , CASE
                WHEN (SELECT count(taf.task_id) FROM owl_task_attached_file taf WHERE taf.task_id = t.id) > 0 THEN true
                ELSE false
              END as attachedFileExistYn
            , CASE
                WHEN t.private_yn = 'Y' THEN true
                WHEN t.private_yn = 'N' THEN false
              END as privateYn
            , CASE
                WHEN t.template_yn = 'Y' THEN true
                WHEN t.template_yn = 'N' THEN false
              END as templateYn
            , CASE
                WHEN t.important_yn = 'Y' THEN true
                WHEN t.important_yn = 'N' THEN false
              END as importantYn
            , tp.id as projectId, tp.name as projectName
            , CASE
                WHEN tp.folder_yn = 'Y' THEN true
                WHEN tp.folder_yn = 'N' THEN false
              END as projectFolderYn
            , pt.id as parentTaskId, pt.name as parentTaskName, ptc.name as parentTaskStatusName, ptc.id as parentTaskStatusId
            , (SELECT count(st.id) FROM owl_task st WHERE st.parent_id = t.id) as subTaskCount
            , (SELECT count(rt.related_task_id) FROM owl_related_task rt WHERE rt.task_id = t.id) as relatedTaskCount
            , u.id as assigneeId, u.name as assigneeName, u.profile_image_id as assigneeProfileImageId
            , trs.repeat_type as repeatType
        FROM (
                <choose>
                    <when test="listType == 'TODAY'">
                        SELECT
                            CASE
                                WHEN to_char(now(), 'YYYY-MM-DD') > it.end_date THEN 9
                                WHEN to_char(now(), 'YYYY-MM-DD') = it.end_date THEN 8
                                ELSE 1
                            END as orderTarget
                            ,it.*
                        FROM owl_task it
                        WHERE it.end_date != ''
                        AND to_char(now(), 'YYYY-MM-DD') >= it.start_date
                        AND it.status_id = 1
                        AND (created_by = #{userId}
                             OR EXISTS (SELECT tu.id
                                        FROM owl_task_user tu
                                        LEFT JOIN owl_user tiu ON tu.user_id = tiu.id
                                        WHERE tu.task_id = it.id
                                        AND tiu.login = #{userId}
                                )
                        )
                        <include refid="taskListFilterTypeQuery" />
                        ORDER BY orderTarget DESC, it.end_date ASC, it.start_date ASC
                    </when>
                    <when test="listType == 'SCHEDULED'">
                        SELECT
                            CASE
                                WHEN it.start_date != '' THEN 9
                                ELSE 1
                            END as orderTarget
                            ,it.*
                        FROM owl_task it
                        WHERE (to_char(now(), 'YYYY-MM-DD') &lt; it.start_date OR (it.start_date = '' AND it.end_date = ''))
                        AND it.status_id = 1
                        AND (created_by = #{userId}
                            OR EXISTS (SELECT tu.id
                                        FROM owl_task_user tu
                                        LEFT JOIN owl_user tiu ON tu.user_id = tiu.id
                                        WHERE tu.task_id = it.id
                                        AND tiu.login = #{userId}
                                )
                        )
                        <include refid="taskListFilterTypeQuery" />
                        ORDER BY orderTarget DESC, it.start_date ASC, it.created_date ASC
                    </when>
                    <when test="listType == 'HOLD'">
                        SELECT
                            1 as orderTarget
                            ,it.*
                        FROM owl_task it
                        WHERE it.status_id = 3
                        AND (created_by = #{userId}
                        OR EXISTS (SELECT tu.id
                                    FROM owl_task_user tu
                                    LEFT JOIN owl_user tiu ON tu.user_id = tiu.id
                                    WHERE tu.task_id = it.id
                                    AND tiu.login = #{userId}
                                )
                        )
                        <include refid="taskListFilterTypeQuery" />
                        ORDER BY orderTarget DESC, it.end_date ASC, it.start_date ASC
                    </when>
                    <when test="listType == 'COMPLETE'">
                        SELECT
                            1 as orderTarget
                            ,it.*
                        FROM owl_task it
                        WHERE it.status_id = 2
                        AND (created_by = #{userId}
                        OR EXISTS (SELECT tu.id
                                    FROM owl_task_user tu
                                    LEFT JOIN owl_user tiu ON tu.user_id = tiu.id
                                    WHERE tu.task_id = it.id
                                    AND tiu.login = #{userId}
                                )
                        )
                        <include refid="taskListFilterTypeQuery" />
                        ORDER BY orderTarget DESC, it.end_date DESC
                    </when>
                </choose>
                OFFSET 0 LIMIT 10
            ) t
            LEFT JOIN owl_code tc ON t.status_id = tc.id
            LEFT OUTER JOIN owl_task_project tpr ON tpr.task_id = t.id
            LEFT JOIN owl_project tp ON tp.id = tpr.project_id
            LEFT OUTER JOIN owl_task pt ON t.parent_id = pt.id
            LEFT JOIN owl_code ptc ON pt.status_id = ptc.id
            LEFT OUTER JOIN owl_task_user tu ON tu.task_id = t.id AND tu.user_type = 'ASSIGNEE'
            LEFT JOIN owl_user u ON tu.user_id = u.id
            LEFT OUTER JOIN owl_task_repeat_schedule trs ON trs.task_id = t.id
            ORDER BY t.orderTarget DESC, t.end_date ASC, t.start_date ASC
    </select>

    <sql id="taskCountInnerQuery">
        SELECT it.*
        FROM owl_task it
        <choose>
            <when test="listType == 'TODAY'">
                WHERE it.end_date != ''
                AND to_char(now(), 'YYYY-MM-DD') >= it.start_date
                AND it.status_id = 1
            </when>
            <when test="listType == 'SCHEDULED'">
                WHERE (to_char(now(), 'YYYY-MM-DD') &lt; it.start_date OR (it.start_date = '' AND it.end_date = ''))
                AND it.status_id = 1
            </when>
            <when test="listType == 'HOLD'">
                WHERE it.status_id = 3
            </when>
            <when test="listType == 'COMPLETE'">
                WHERE it.status_id = 2
                AND (created_by = #{userId}
            </when>
        </choose>
    </sql>

    <select id="getTaskCount" resultMap="taskCountResultMap" parameterType="java.util.HashMap">
        SELECT (c.assignedCount + c.createdCount + c.watchedCount) as totalCount, c.assignedCount, c.createdCount, c.watchedCount
        FROM (SELECT (SELECT COUNT(t.id)
                FROM (<include refid="taskCountInnerQuery"/>) t
                WHERE t.id IN (SELECT tu.task_id
                        FROM owl_task_user tu
                        LEFT JOIN owl_user u ON tu.user_id = u.id
                        WHERE tu.user_type = 'ASSIGNEE'
                        AND u.login = #{userId})
            ) as assignedCount
            , (SELECT COUNT(t.id)
                FROM (<include refid="taskCountInnerQuery"/>) t
                WHERE NOT t.id IN (SELECT tu.task_id
                        FROM owl_task_user tu
                        LEFT JOIN owl_user u ON tu.user_id = u.id
                        WHERE tu.user_type = 'ASSIGNEE'
                        AND u.login = #{userId})
                AND t.created_by = #{userId}
            ) as createdCount
            ,(SELECT COUNT(t.id)
                FROM (<include refid="taskCountInnerQuery"/>) t
                WHERE NOT t.id IN (SELECT tu.task_id
                        FROM owl_task_user tu
                        LEFT JOIN owl_user u ON tu.user_id = u.id
                        WHERE tu.user_type = 'ASSIGNEE'
                        AND u.login = #{userId})
                AND t.id IN (SELECT tu.task_id
                        FROM owl_task_user tu
                        LEFT JOIN owl_user u ON tu.user_id = u.id
                        WHERE tu.user_type = 'WATCHER'
                        AND u.login = #{userId})
                AND t.created_by != #{userId}
            ) as watchedCount) c
    </select>

</mapper>
